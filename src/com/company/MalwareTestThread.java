package com.company;

// 공유 자원에 접근하는 스레드 클래스
class MalwareTestThread implements Runnable{
    public static int MAX_AVAILABLE_READ_NUM = 100; // 스레드가 읽을 수 있는 최대 문자 개수
    int countLetterNum = 0; // 스레드가 읽은 글자 개수
    int tid; // 이 스레드 id(tid)
    MalwareTestSystem malwareTestSystem; // 스레드들이 공유하는 악성코드 검사 시스템 선언
    TestObj currentTestObj; // 현재 검사하고 있는 테스트 코드
    boolean isTerminated = false; // 스레드가 종료되었는지
    boolean isNeedNextStartTest; // 끊긴 일치한 부분 검사가 필요한지
    public MalwareTestThread(int tid, MalwareTestSystem malwareTestSystem) {
        this.tid = tid;
        this.malwareTestSystem = malwareTestSystem; // 스레드들이 공유하는 악성코드 검사 시스템 객체 할당
    }
    @Override
    public void run() {
        // 이 스레드가 종료되었다고 알려주는 isTerminated가 true이거나 스레드가 100글자를 다 읽을 때까지 계속 공유 객체로 들어가서 use 함수를 실행함
        while(isTerminated == false && countLetterNum < MAX_AVAILABLE_READ_NUM) {
            // 악성코드 검사 시스템의 use 함수 실행(파라미터로 이 스레드 객체를 넘겨줌)
            malwareTestSystem.use(this);
        }
    }
}
